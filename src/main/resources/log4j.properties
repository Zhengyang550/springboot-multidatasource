#注意优先级  DEBUG < INFO < WARN < ERROR < FATAL
#log4j.rootLogger = [ level ] , appenderName1, appenderName2, …
#level: 比如在这里设定了INFO级别，则应用程序中所有DEBUG级别的日志信息将不会被打印出来
#appenderName：就是指定日志信息要输出到哪里。可以同时指定多个输出目的地，用逗号隔开。
log4j.rootLogger=info,ERROR,INFO,CONSOLE,DEBUG

#控制台输出
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.Target=System.out
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%t] [%c] [%p] - %m%n

#输出INFO级别以上的日志到文件
log4j.logger.INFO=info
log4j.appender.INFO=org.apache.log4j.DailyRollingFileAppender
log4j.appender.INFO.layout=org.apache.log4j.PatternLayout
log4j.appender.INFO.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%t] [%c] [%p] - %m%n
log4j.appender.INFO.datePattern='.'yyyy-MM-dd
log4j.appender.INFO.Threshold =info
log4j.appender.INFO.append=true
log4j.appender.INFO.File=./logs/info/info.log

#输出ERROR级别以上的日志到文件
log4j.logger.ERROR=error
log4j.appender.ERROR=org.apache.log4j.DailyRollingFileAppender
log4j.appender.ERROR.layout=org.apache.log4j.PatternLayout
log4j.appender.ERROR.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%t] [%c] [%p] - %m%n
log4j.appender.ERROR.datePattern='.'yyyy-MM-dd
log4j.appender.ERROR.Threshold =error
log4j.appender.ERROR.append=true
log4j.appender.ERROR.File=./logs/error/error.log

#输出DEBUG级别以上的日志到文件
log4j.logger.DEBUG=DEBUG
log4j.appender.DEBUG=org.apache.log4j.DailyRollingFileAppender
log4j.appender.DEBUG.layout=org.apache.log4j.PatternLayout
log4j.appender.DEBUG.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%t] [%c] [%p] - %m%n
log4j.appender.DEBUG.datePattern='.'yyyy-MM-dd
log4j.appender.DEBUG.Threshold = DEBUG
log4j.appender.DEBUG.append=true
log4j.appender.DEBUG.File=./logs/debug/debug.log